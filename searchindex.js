Search.setIndex({"docnames": ["_autosummary/tlc", "_autosummary/tlc.common", "_autosummary/tlc.common.about", "_autosummary/tlc.common.about.about", "_autosummary/tlc.common.conditionchecker", "_autosummary/tlc.common.conditionchecker.ConditionChecker", "_autosummary/tlc.common.conditionchecker.ConditionErrorCriteria", "_autosummary/tlc.common.conditionchecker.ConditionErrorLevel", "_autosummary/tlc.common.miscutils", "_autosummary/tlc.common.miscutils.BoundingBox", "_autosummary/tlc.common.miscutils.countMayaProjectsInPath", "_autosummary/tlc.common.miscutils.deleteChannelsAndHistory", "_autosummary/tlc.common.miscutils.deleteChannelsAndHistoryForAll", "_autosummary/tlc.common.miscutils.deleteEmptyGroups", "_autosummary/tlc.common.miscutils.getBrokenReferences", "_autosummary/tlc.common.miscutils.getCopyPastedNodes", "_autosummary/tlc.common.miscutils.getCurrentProject", "_autosummary/tlc.common.miscutils.getEmptyGroups", "_autosummary/tlc.common.miscutils.getInstances", "_autosummary/tlc.common.miscutils.getNodesWithInvalidCharacters", "_autosummary/tlc.common.miscutils.getProjectPathForScene", "_autosummary/tlc.common.miscutils.getReferences", "_autosummary/tlc.common.miscutils.getScenesInDirectory", "_autosummary/tlc.common.miscutils.importFile", "_autosummary/tlc.common.miscutils.isNameUnique", "_autosummary/tlc.common.miscutils.referenceFile", "_autosummary/tlc.common.miscutils.renameNonUniqueNodes", "_autosummary/tlc.common.miscutils.uninstance", "_autosummary/tlc.common.naming", "_autosummary/tlc.common.naming.DCCProjTopDirs", "_autosummary/tlc.common.naming.DCCSceneExtension", "_autosummary/tlc.common.naming.assetTypeAbbr", "_autosummary/tlc.common.naming.assetTypeDir", "_autosummary/tlc.common.naming.assetTypeFromAbbr", "_autosummary/tlc.common.naming.directoriesToIgnore", "_autosummary/tlc.common.naming.filesToIgnore", "_autosummary/tlc.common.naming.imgPlanePos", "_autosummary/tlc.common.naming.libraryAssetTypeAbbr", "_autosummary/tlc.common.naming.libraryAssetTypeDir", "_autosummary/tlc.common.naming.libraryAssetTypeFromAbbr", "_autosummary/tlc.common.naming.libraryDir", "_autosummary/tlc.common.naming.prepDptDir", "_autosummary/tlc.common.naming.prepDptKeyFromDir", "_autosummary/tlc.common.naming.prepDptTask", "_autosummary/tlc.common.naming.prepDptTaskFromAbbr", "_autosummary/tlc.common.naming.prepTaskRenamingSuggestions", "_autosummary/tlc.common.naming.prodDptDir", "_autosummary/tlc.common.naming.prodDptTask", "_autosummary/tlc.common.naming.srcImgDirs", "_autosummary/tlc.common.naming.topDirs", "_autosummary/tlc.common.naming.workingDir", "_autosummary/tlc.common.pipeline", "_autosummary/tlc.common.pipeline.Asset", "_autosummary/tlc.common.pipeline.AssetFile", "_autosummary/tlc.common.pipeline.DCCProject", "_autosummary/tlc.common.pipeline.Shot", "_autosummary/tlc.common.pipeline.createDirectoryTemplate", "_autosummary/tlc.common.pipeline.getProjectForScene", "_autosummary/tlc.common.pipeline.isThisPathAProject", "_autosummary/tlc.common.qtutils", "_autosummary/tlc.common.qtutils.CheckerWindow", "_autosummary/tlc.common.qtutils.getMayaMainWindow", "_autosummary/tlc.modeling", "_autosummary/tlc.modeling.meshcheck", "_autosummary/tlc.modeling.meshcheck.MeshChecker", "_autosummary/tlc.modeling.meshcheck.checkUVTile", "_autosummary/tlc.modeling.meshcheck.getTileID", "_autosummary/tlc.modeling.meshcheck_ui", "_autosummary/tlc.modeling.meshcheck_ui.MeshCheckerUI", "_autosummary/tlc.modeling.meshcheck_ui.run", "_autosummary/tlc.rigging", "_autosummary/tlc.shading", "_autosummary/tlc.shading.texturecheck_ui", "_autosummary/tlc.shading.texturecheck_ui.TextureCheckerUI", "_autosummary/tlc.shading.texturecheck_ui.run", "_autosummary/tlc.shading.textureutils", "_autosummary/tlc.shading.textureutils.FileTexture", "_autosummary/tlc.shading.textureutils.ImageSource", "_autosummary/tlc.shading.textureutils.checkDuplicatedFileTextureNodes", "_autosummary/tlc.shading.textureutils.getAllFileTextureNodesInScene", "_autosummary/tlc.shading.textureutils.getUnusedTextureNodes", "_autosummary/tlc.shading.textureutils.getUsedTextureNodes", "_autosummary/tlc.shading.textureutils.inputConnectionsToMapType", "_autosummary/tlc.shading.textureutils.test", "index"], "filenames": ["_autosummary/tlc.rst", "_autosummary/tlc.common.rst", "_autosummary/tlc.common.about.rst", "_autosummary/tlc.common.about.about.rst", "_autosummary/tlc.common.conditionchecker.rst", "_autosummary/tlc.common.conditionchecker.ConditionChecker.rst", "_autosummary/tlc.common.conditionchecker.ConditionErrorCriteria.rst", "_autosummary/tlc.common.conditionchecker.ConditionErrorLevel.rst", "_autosummary/tlc.common.miscutils.rst", "_autosummary/tlc.common.miscutils.BoundingBox.rst", "_autosummary/tlc.common.miscutils.countMayaProjectsInPath.rst", "_autosummary/tlc.common.miscutils.deleteChannelsAndHistory.rst", "_autosummary/tlc.common.miscutils.deleteChannelsAndHistoryForAll.rst", "_autosummary/tlc.common.miscutils.deleteEmptyGroups.rst", "_autosummary/tlc.common.miscutils.getBrokenReferences.rst", "_autosummary/tlc.common.miscutils.getCopyPastedNodes.rst", "_autosummary/tlc.common.miscutils.getCurrentProject.rst", "_autosummary/tlc.common.miscutils.getEmptyGroups.rst", "_autosummary/tlc.common.miscutils.getInstances.rst", "_autosummary/tlc.common.miscutils.getNodesWithInvalidCharacters.rst", "_autosummary/tlc.common.miscutils.getProjectPathForScene.rst", "_autosummary/tlc.common.miscutils.getReferences.rst", "_autosummary/tlc.common.miscutils.getScenesInDirectory.rst", "_autosummary/tlc.common.miscutils.importFile.rst", "_autosummary/tlc.common.miscutils.isNameUnique.rst", "_autosummary/tlc.common.miscutils.referenceFile.rst", "_autosummary/tlc.common.miscutils.renameNonUniqueNodes.rst", "_autosummary/tlc.common.miscutils.uninstance.rst", "_autosummary/tlc.common.naming.rst", "_autosummary/tlc.common.naming.DCCProjTopDirs.rst", "_autosummary/tlc.common.naming.DCCSceneExtension.rst", "_autosummary/tlc.common.naming.assetTypeAbbr.rst", "_autosummary/tlc.common.naming.assetTypeDir.rst", "_autosummary/tlc.common.naming.assetTypeFromAbbr.rst", "_autosummary/tlc.common.naming.directoriesToIgnore.rst", "_autosummary/tlc.common.naming.filesToIgnore.rst", "_autosummary/tlc.common.naming.imgPlanePos.rst", "_autosummary/tlc.common.naming.libraryAssetTypeAbbr.rst", "_autosummary/tlc.common.naming.libraryAssetTypeDir.rst", "_autosummary/tlc.common.naming.libraryAssetTypeFromAbbr.rst", "_autosummary/tlc.common.naming.libraryDir.rst", "_autosummary/tlc.common.naming.prepDptDir.rst", "_autosummary/tlc.common.naming.prepDptKeyFromDir.rst", "_autosummary/tlc.common.naming.prepDptTask.rst", "_autosummary/tlc.common.naming.prepDptTaskFromAbbr.rst", "_autosummary/tlc.common.naming.prepTaskRenamingSuggestions.rst", "_autosummary/tlc.common.naming.prodDptDir.rst", "_autosummary/tlc.common.naming.prodDptTask.rst", "_autosummary/tlc.common.naming.srcImgDirs.rst", "_autosummary/tlc.common.naming.topDirs.rst", "_autosummary/tlc.common.naming.workingDir.rst", "_autosummary/tlc.common.pipeline.rst", "_autosummary/tlc.common.pipeline.Asset.rst", "_autosummary/tlc.common.pipeline.AssetFile.rst", "_autosummary/tlc.common.pipeline.DCCProject.rst", "_autosummary/tlc.common.pipeline.Shot.rst", "_autosummary/tlc.common.pipeline.createDirectoryTemplate.rst", "_autosummary/tlc.common.pipeline.getProjectForScene.rst", "_autosummary/tlc.common.pipeline.isThisPathAProject.rst", "_autosummary/tlc.common.qtutils.rst", "_autosummary/tlc.common.qtutils.CheckerWindow.rst", "_autosummary/tlc.common.qtutils.getMayaMainWindow.rst", "_autosummary/tlc.modeling.rst", "_autosummary/tlc.modeling.meshcheck.rst", "_autosummary/tlc.modeling.meshcheck.MeshChecker.rst", "_autosummary/tlc.modeling.meshcheck.checkUVTile.rst", "_autosummary/tlc.modeling.meshcheck.getTileID.rst", "_autosummary/tlc.modeling.meshcheck_ui.rst", "_autosummary/tlc.modeling.meshcheck_ui.MeshCheckerUI.rst", "_autosummary/tlc.modeling.meshcheck_ui.run.rst", "_autosummary/tlc.rigging.rst", "_autosummary/tlc.shading.rst", "_autosummary/tlc.shading.texturecheck_ui.rst", "_autosummary/tlc.shading.texturecheck_ui.TextureCheckerUI.rst", "_autosummary/tlc.shading.texturecheck_ui.run.rst", "_autosummary/tlc.shading.textureutils.rst", "_autosummary/tlc.shading.textureutils.FileTexture.rst", "_autosummary/tlc.shading.textureutils.ImageSource.rst", "_autosummary/tlc.shading.textureutils.checkDuplicatedFileTextureNodes.rst", "_autosummary/tlc.shading.textureutils.getAllFileTextureNodesInScene.rst", "_autosummary/tlc.shading.textureutils.getUnusedTextureNodes.rst", "_autosummary/tlc.shading.textureutils.getUsedTextureNodes.rst", "_autosummary/tlc.shading.textureutils.inputConnectionsToMapType.rst", "_autosummary/tlc.shading.textureutils.test.rst", "index.rst"], "titles": ["tlc", "tlc.common", "tlc.common.about", "tlc.common.about.about", "tlc.common.conditionchecker", "tlc.common.conditionchecker.ConditionChecker", "tlc.common.conditionchecker.ConditionErrorCriteria", "tlc.common.conditionchecker.ConditionErrorLevel", "tlc.common.miscutils", "tlc.common.miscutils.BoundingBox", "tlc.common.miscutils.countMayaProjectsInPath", "tlc.common.miscutils.deleteChannelsAndHistory", "tlc.common.miscutils.deleteChannelsAndHistoryForAll", "tlc.common.miscutils.deleteEmptyGroups", "tlc.common.miscutils.getBrokenReferences", "tlc.common.miscutils.getCopyPastedNodes", "tlc.common.miscutils.getCurrentProject", "tlc.common.miscutils.getEmptyGroups", "tlc.common.miscutils.getInstances", "tlc.common.miscutils.getNodesWithInvalidCharacters", "tlc.common.miscutils.getProjectPathForScene", "tlc.common.miscutils.getReferences", "tlc.common.miscutils.getScenesInDirectory", "tlc.common.miscutils.importFile", "tlc.common.miscutils.isNameUnique", "tlc.common.miscutils.referenceFile", "tlc.common.miscutils.renameNonUniqueNodes", "tlc.common.miscutils.uninstance", "tlc.common.naming", "tlc.common.naming.DCCProjTopDirs", "tlc.common.naming.DCCSceneExtension", "tlc.common.naming.assetTypeAbbr", "tlc.common.naming.assetTypeDir", "tlc.common.naming.assetTypeFromAbbr", "tlc.common.naming.directoriesToIgnore", "tlc.common.naming.filesToIgnore", "tlc.common.naming.imgPlanePos", "tlc.common.naming.libraryAssetTypeAbbr", "tlc.common.naming.libraryAssetTypeDir", "tlc.common.naming.libraryAssetTypeFromAbbr", "tlc.common.naming.libraryDir", "tlc.common.naming.prepDptDir", "tlc.common.naming.prepDptKeyFromDir", "tlc.common.naming.prepDptTask", "tlc.common.naming.prepDptTaskFromAbbr", "tlc.common.naming.prepTaskRenamingSuggestions", "tlc.common.naming.prodDptDir", "tlc.common.naming.prodDptTask", "tlc.common.naming.srcImgDirs", "tlc.common.naming.topDirs", "tlc.common.naming.workingDir", "tlc.common.pipeline", "tlc.common.pipeline.Asset", "tlc.common.pipeline.AssetFile", "tlc.common.pipeline.DCCProject", "tlc.common.pipeline.Shot", "tlc.common.pipeline.createDirectoryTemplate", "tlc.common.pipeline.getProjectForScene", "tlc.common.pipeline.isThisPathAProject", "tlc.common.qtutils", "tlc.common.qtutils.CheckerWindow", "tlc.common.qtutils.getMayaMainWindow", "tlc.modeling", "tlc.modeling.meshcheck", "tlc.modeling.meshcheck.MeshChecker", "tlc.modeling.meshcheck.checkUVTile", "tlc.modeling.meshcheck.getTileID", "tlc.modeling.meshcheck_ui", "tlc.modeling.meshcheck_ui.MeshCheckerUI", "tlc.modeling.meshcheck_ui.run", "tlc.rigging", "tlc.shading", "tlc.shading.texturecheck_ui", "tlc.shading.texturecheck_ui.TextureCheckerUI", "tlc.shading.texturecheck_ui.run", "tlc.shading.textureutils", "tlc.shading.textureutils.FileTexture", "tlc.shading.textureutils.ImageSource", "tlc.shading.textureutils.checkDuplicatedFileTextureNodes", "tlc.shading.textureutils.getAllFileTextureNodesInScene", "tlc.shading.textureutils.getUnusedTextureNodes", "tlc.shading.textureutils.getUsedTextureNodes", "tlc.shading.textureutils.inputConnectionsToMapType", "tlc.shading.textureutils.test", "Welcome to TLC\u2019s documentation!"], "terms": {"taller": 0, "de": 0, "creaci\u00f3n": 0, "tool": [0, 1, 2, 62, 70, 71], "modul": [0, 1, 2, 6, 7, 8, 28, 51, 52, 59, 62, 63, 67, 71, 72, 75, 77, 84], "thi": [2, 4, 5, 6, 7, 8, 15, 20, 51, 52, 53, 54, 58, 59, 63, 64, 67, 68, 72, 73, 75, 76], "displai": [2, 5], "inform": [2, 3, 7, 9], "instal": 2, "It": 2, "also": 2, "serv": 2, "templat": [2, 56], "header": [2, 64], "document": 2, "code": 2, "style": 2, "function": [2, 8, 28, 51, 59, 63, 64, 67, 68, 72, 73, 75], "show": [3, 5, 7, 9], "gener": [3, 8, 51, 59, 60], "i": [4, 6, 7, 8, 15, 24, 52, 53, 54, 58, 64, 68, 73, 76], "class": [4, 5, 6, 7, 8, 9, 51, 52, 53, 54, 55, 59, 60, 63, 64, 67, 68, 72, 73, 75, 76, 77], "count": [4, 5, 10], "store": 4, "element": [4, 5, 8, 11, 68], "meet": [4, 68], "condit": [4, 5, 7, 64, 68, 76], "mai": [4, 8, 15, 54, 59, 64, 72, 75], "deriv": 4, "some": [4, 7, 64], "type": [4, 6, 7, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31, 32, 33, 37, 38, 39, 42, 44, 52, 53, 54, 57, 58, 66, 76, 77, 79, 82], "error": [4, 5, 6, 7, 76], "object": [4, 5, 9, 52, 53, 54, 55, 61, 64, 68, 73, 76, 79], "us": [4, 5, 6, 8, 15, 54, 59, 60, 64, 76], "popul": [4, 68], "checker": [4, 60, 64, 68, 69, 73, 74], "tabl": [4, 68, 73], "ui": [4, 5, 59, 60, 67, 68, 73], "name": [5, 6, 7, 9, 15, 17, 18, 19, 23, 24, 25, 26, 52, 54, 56, 58, 64, 76, 77, 82], "displaynam": 5, "tooltip": 5, "select": [5, 64, 68], "true": 5, "base": [5, 6, 7, 9, 52, 53, 54, 55, 60, 64, 68, 73, 76, 77], "__init__": [5, 6, 7, 9, 52, 53, 54, 55, 60, 64, 68, 73, 76, 77], "constructor": [5, 9, 52, 53, 54, 60, 64, 68, 73, 76], "paramet": [5, 9, 10, 11, 20, 22, 23, 24, 25, 27, 33, 39, 42, 44, 52, 53, 54, 56, 57, 58, 64, 65, 66, 68, 73, 76], "str": [5, 9, 16, 33, 39, 42, 44, 52, 53, 54, 56, 57, 58, 66, 76, 79, 82], "option": [5, 9, 22, 52, 53, 54, 56], "short": 5, "id": [5, 52, 53, 54, 58, 66], "kei": [5, 33, 39, 42, 44, 52, 53, 54, 64], "default": [5, 9, 22, 52, 53, 54, 56, 64], "long": 5, "descript": 5, "bool": [5, 9, 24, 52, 53, 54, 58, 76], "ar": [5, 8, 45], "method": [5, 9, 52, 53, 54, 55, 60, 64, 68, 73, 76], "attribut": [5, 6, 7, 28, 52, 53, 54, 60, 64, 68, 73, 75, 76, 77], "0": [5, 6, 7, 53, 76], "number": [5, 10, 26], "compon": 5, "match": [5, 53, 76], "elm": 5, "list": [5, 14, 15, 17, 18, 19, 21, 22, 27, 54, 76, 79], "errorlevel": 5, "level": [5, 7], "an": [5, 6, 11, 53], "reset": [5, 64], "counter": [5, 6, 64], "The": [5, 7, 53, 58, 64, 76], "can": [5, 15], "seterrorlevel": [5, 6], "crit": 5, "set": [5, 31, 32, 37, 38, 65, 76], "follow": [5, 45, 53, 76], "criteria": [5, 6], "suppli": [5, 10, 22, 57, 68], "conditionerrorcriteria": 5, "text": 5, "valu": [6, 7, 64, 77], "none": [6, 7, 23, 25, 52, 53, 57, 76, 77], "qualnam": [6, 7, 77], "start": [6, 7, 77], "1": [6, 7, 53, 64, 77], "boundari": [6, 7, 77], "enum": [6, 7, 77], "enumer": 6, "when": [6, 8, 15, 34, 35, 76], "call": 6, "arg": [6, 7, 60, 68, 73, 77], "kwd": [6, 7, 77], "error_when_not_on": 6, "flag": 6, "one": 6, "error_when_not_zero": 6, "zero": 6, "warn_when_not_on": 6, "3": [6, 7, 9], "A": 6, "warn": [6, 7], "warn_when_not_zero": 6, "2": [6, 7], "ok": 7, "accept": 7, "No": 7, "probabl": [7, 23, 25], "cannot": 7, "right": [7, 36], "wrong": [7, 15, 45], "everyth": 7, "correct": [7, 76], "situat": 7, "optim": 7, "fatal": 7, "either": 7, "miscellan": 8, "util": [8, 59, 63, 67, 72, 75], "contain": [8, 20, 51, 52, 57, 59, 63, 67, 72, 75], "ani": [8, 53, 60, 68, 73, 76], "depart": [8, 41, 42, 43, 44, 46, 47, 52, 53, 63, 72, 75], "task": [8, 43, 44, 45, 47, 52, 53], "specif": 8, "pipelin": [8, 45, 76], "thei": 8, "usabl": 8, "maya": [8, 10, 16, 23, 25, 54, 61], "scene": [8, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 52, 53, 57, 73, 79], "signific": 8, "amount": 8, "relat": [8, 72, 75], "field": [8, 53, 76], "move": 8, "new": [8, 68, 73], "though": 8, "should": 8, "done": 8, "onli": 8, "veri": 8, "special": 8, "case": [8, 15], "avoid": 8, "break": 8, "backward": 8, "compat": 8, "node": [9, 11, 15, 18, 19, 21, 24, 26, 27, 76, 79], "axi": 9, "align": 9, "bound": [9, 64], "box": [9, 64], "aabb": 9, "string": [9, 10, 11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 66], "analyz": [9, 34, 35, 64], "center": 9, "get": [9, 15, 18, 19, 33, 39, 42, 44, 52, 54, 76, 79], "return": [9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 33, 39, 42, 44, 52, 53, 54, 57, 58, 61, 66, 76, 79, 82], "x": 9, "y": 9, "z": 9, "float": [9, 65, 66], "createdebugwirefram": 9, "bbox": [9, 64], "hidden": 9, "fals": [9, 52, 54, 76], "creat": [9, 56], "wirefram": 9, "cube": 9, "debug": 9, "hide": 9, "depth": 9, "diamet": 9, "envelop": 9, "sphere": 9, "min": 9, "max": 9, "6": 9, "height": [9, 76], "maximum": 9, "coordin": [9, 65, 66], "corner": 9, "maxdim": 9, "size": 9, "dimens": 9, "minimum": 9, "radiu": 9, "width": [9, 76], "filenam": [10, 76], "project": [10, 16, 20, 29, 34, 35, 49, 51, 52, 53, 54, 56, 57, 58, 76], "path": [10, 16, 20, 22, 23, 25, 52, 53, 54, 56, 57, 58, 76], "search": [10, 22, 54, 84], "insid": [10, 22, 29, 49, 52, 53, 54, 76], "int": [10, 53, 54], "group_nam": [11, 23, 25], "delet": [11, 12, 13], "channel": [11, 12, 76], "animcurv": [11, 12], "construct": [11, 12], "histori": [11, 12], "scenegraph": 11, "clean": 11, "up": 11, "all": [12, 13, 52, 54, 79], "empti": [13, 17, 54], "group": [13, 17, 23, 25, 76], "broken": 14, "refer": [14, 21, 25], "copi": [15, 27], "past": 15, "have": [15, 64], "anyth": 15, "apart": 15, "from": [15, 25, 33, 39, 42, 44, 53, 60, 68, 73], "But": 15, "nice": 15, "detect": [15, 76], "ha": [15, 76], "been": [15, 64], "so": [15, 65], "we": [15, 54], "laugh": 15, "peopl": 15, "respons": [15, 64], "atroc": 15, "cut": 15, "hand": 15, "depend": 15, "current": [16, 17, 23, 25, 53, 54, 73, 76], "open": [16, 53, 64], "workspac": 16, "instanc": [18, 27], "invalid": 19, "charact": [19, 31, 32, 37, 38], "scene_path": [20, 57], "referenc": [21, 25], "extens": [22, 30, 76], "mb": [22, 30, 43, 45], "ma": 22, "directori": [22, 29, 32, 34, 38, 40, 41, 42, 43, 46, 47, 49, 50, 52, 54, 56], "structur": [22, 56], "compli": 22, "file": [22, 23, 25, 30, 35, 45, 53, 57, 60, 64, 68, 73, 76, 79], "file_path": [23, 25], "import": 23, "content": [23, 25, 34, 35, 51], "cmd": [23, 25], "command": [23, 25], "n": 24, "check": [24, 53, 58, 63, 65, 67, 68, 73, 76], "whether": [24, 53, 58], "uniqu": [24, 26], "renam": [26, 45], "non": 26, "ad": 26, "postfix": 26, "convent": [28, 56], "asset": [29, 30, 31, 32, 33, 37, 38, 39, 41, 43, 48, 50, 51, 53, 54, 76], "sourceimag": [29, 54, 76], "top": [29, 36, 49], "dcc": [29, 54], "shot": [30, 46, 47, 50, 51], "camera": [31, 32, 37, 38], "cm": 31, "ch": 31, "fx": [31, 32, 37, 38, 41, 43, 46, 47], "light": [31, 32, 37, 38, 41, 43, 45, 46, 47], "lg": 31, "prop": [31, 32, 37, 38], "pr": 31, "st": 31, "abbrevi": [31, 33, 37, 39, 44], "03_camera": 32, "00_charact": 32, "05_fx": 32, "04_light": [32, 46], "01_prop": 32, "02_set": 32, "search_abbr": [33, 39, 44], "mayaswatch": 34, "ignor": [34, 35], "desktop": 35, "ini": 35, "back": 36, "imgplanebk": 36, "bottom": 36, "imgplanebt": 36, "front": 36, "imgplanefr": 36, "left": [36, 54], "imgplanelf": 36, "imgplanerg": 36, "imgplanetp": 36, "imag": [36, 48, 76], "plane": 36, "posit": 36, "lbcm": 37, "lbch": 37, "lbfx": 37, "lblg": 37, "lbpr": 37, "lbst": 37, "librari": [37, 38, 39, 40, 52, 54], "03_lbcamera": 38, "00_lbcharact": 38, "05_lbfx": 38, "04_lblight": 38, "01_lbprop": 38, "02_lbset": 38, "99_librari": 40, "cloth": [41, 43], "02_cloth": 41, "06_fx": 41, "hair": [41, 43], "03_hair": 41, "05_light": 41, "model": [41, 43], "00_model": 41, "rig": [41, 43], "01_rig": 41, "shade": [41, 43], "04_shade": 41, "preproduct": [41, 43], "search_dir": 42, "lgt": [43, 45], "lookdev": [43, 45, 71], "lkdv": [43, 45], "blendshap": 43, "highpoli": 43, "mhp": [43, 45], "lowpoli": 43, "mlp": [43, 45], "sculpt": 43, "msc": [43, 45], "anim": [43, 46, 47], "layout": [43, 46, 47, 60, 68, 73], "shd": 43, "dpt_id": 44, "bl": 45, "mod": 45, "modb": 45, "modhp": 45, "modlp": 45, "modsc": 45, "suggest": 45, "identif": 45, "older": 45, "version": [45, 52, 53], "simpli": 45, "close": 45, "01_anim": 46, "cach": [46, 47], "02_cach": 46, "03_fx": 46, "00_layout": 46, "render": [46, 47], "05_render": 46, "product": [46, 47], "ablk": 47, "abrd": 47, "aref": 47, "concept": 48, "00_conceptart": 48, "textur": [48, 65, 66, 71, 72, 73, 75, 76, 79], "01_textur": 48, "sourc": [48, 76], "subdirectori": 48, "each": 48, "dev": 49, "01_dev": 49, "post": 49, "03_post": 49, "pre": 49, "prod": [49, 50], "02_prod": 49, "tran": 49, "00_transdep": 49, "00_work": 50, "work": [50, 52, 53], "both": 50, "prep": 50, "definit": [51, 76], "entiti": 51, "perform": 51, "oper": [51, 73], "its": 51, "assettyp": 52, "assetid": 52, "inlibrari": 52, "dccproject": 52, "access": 52, "map": [52, 64, 76, 82], "getdirectorynam": 52, "organ": 52, "getfullpathdirectori": 52, "full": [52, 53, 76], "getlastpublishedversionpath": 52, "dpt": 52, "dpttask": 52, "absolut": [52, 54], "last": 52, "publish": [52, 53], "getlastworkingversionpath": 52, "getpublishedversionspath": 52, "getworkingversionspath": 52, "repres": [53, 54], "defin": [53, 76], "buildfullpath": 53, "build": [53, 60, 66, 68, 73], "createforopenscen": 53, "createfromfield": 53, "dptid": 53, "taskid": 53, "workingvers": 53, "public": 53, "createfrompath": 53, "hopefulli": 53, "exist": [53, 76], "fullpath": [53, 76], "parsepath": 53, "pars": 53, "initi": [53, 64], "rais": 53, "except": 53, "well": 53, "format": [53, 76], "verifypath": 53, "constraint": 53, "projid": 54, "global": [54, 64], "folder": [54, 56, 58, 76], "differ": 54, "softwar": 54, "futur": 54, "where": [54, 56, 58, 76], "locat": [54, 58, 76], "getasset": 54, "asset_typ": 54, "include_librari": 54, "argument": [54, 57], "includ": [54, 56, 76], "found": [54, 57, 76], "getassetspath": 54, "normal": 54, "unix": 54, "slash": 54, "window": [54, 60, 61], "backslash": 54, "getsourceimagespath": 54, "proj_id": 56, "tpl": 56, "disk": [56, 76], "illustr": 56, "proj_dir": 58, "valid": [58, 76], "accord": 58, "our": 58, "compliant": 58, "qt": [59, 68, 73], "implemen": 59, "everi": 59, "kwarg": [60, 68, 73], "qdialog": 60, "meant": 60, "origin": [60, 64, 76], "mayb": 60, "extend": 60, "other": [60, 76], "ui_fil": 60, "titl": 60, "parent": [60, 68, 73], "shiboken2": [60, 68, 73], "wrapinst": [60, 68, 73], "createlayout": [60, 68, 73], "initui": [60, 68, 73], "load": [60, 68, 73], "interfac": [60, 68, 73], "main": 61, "widget": [61, 68, 73], "python": 61, "mesh": [63, 64, 67, 76], "statist": 64, "7976931348623157e": 64, "308": 64, "world": 64, "space": [64, 76], "xmin": 64, "ymin": 64, "zmin": 64, "xmax": 64, "ymax": 64, "zmax": 64, "geocondit": 64, "dictionari": 64, "geometri": 64, "anal": 64, "uvcondit": 64, "uv": [64, 65], "writedatacsv": 64, "write": 64, "csv": 64, "data": [64, 68, 73], "note": 64, "doe": 64, "end": [64, 76], "line": 64, "becaus": 64, "concaten": 64, "later": 64, "caller": 64, "_type_": 64, "_description_": 64, "writeheadercsv": 64, "must": 64, "u": [65, 66], "v": [65, 66], "the_set": 65, "tile": [65, 66], "pair": [65, 66], "add": [65, 68, 73], "far": 65, "gui": 67, "implement": 67, "checkerwindow": [68, 73], "user": [68, 73], "meshcheck": 68, "qtablewidget": [68, 73], "http": [68, 73], "doc": [68, 73], "io": [68, 73], "qtforpython": [68, 73], "5": [68, 73], "pyside2": [68, 73], "qtwidget": [68, 73], "html": [68, 73], "addconditioncheck": 68, "table_widget": [68, 73], "cond": 68, "row": [68, 73], "fill": [68, 73], "cell": [68, 73], "conditioncheck": 68, "configur": [68, 73, 76], "button": [68, 73], "check_button": 68, "callback": [68, 73], "createconnect": [68, 73], "connect": [68, 73, 76, 82], "populateui": [68, 73], "mesh_check": 68, "clear": [68, 73], "repopul": [68, 73], "them": [68, 72, 73, 75], "surfac": 71, "whomev": [72, 75], "need": [72, 75], "texturecheck": 73, "addfiletextur": 73, "file_tex": 73, "filetextur": [73, 79], "over": 73, "tex": 73, "checkbutton": 73, "assetfil": 76, "checkdestin": 76, "destin": 76, "self": 76, "target": 76, "checkfiletextur": 76, "verifi": 76, "readabl": 76, "pathinproject": 76, "fileformat": 76, "checkshadinggroup": 76, "find": 76, "engin": 76, "materi": [76, 82], "shadinggroup": 76, "shadingengin": 76, "colorspac": 76, "color": [76, 82], "errormessag": 76, "messag": 76, "getconnectionsthroughattr": 76, "outattr": 76, "first": 76, "output": 76, "getfirstconnectionthroughattr": 76, "getmesh": 76, "imgsrc": 76, "megascan": 76, "hdrihaven": 76, "own": 76, "third": 76, "parti": 76, "catalog": 76, "maptyp": 76, "missingfil": 76, "nodenam": 76, "exclud": 76, "resx": 76, "pixel": 76, "resi": 76, "network": 76, "modifi": 76, "pass": 76, "basic": 76, "verifyfiletexturenameown": 76, "file_textur": 78, "aiflat": 82, "albedo": 82, "ailayershad": 82, "mix1": 82, "opac": 82, "mix2": 82, "mix3": 82, "mix4": 82, "mix5": 82, "mix6": 82, "mix7": 82, "aiskydomelight": 82, "hdri": 82, "groundalbedo": 82, "aistandardsurfac": 82, "basecolor": 82, "metal": 82, "specularrough": 82, "rough": 82, "aitoon": 82, "lambert": 82, "input": 82, "recogn": 82, "per": 82, "lightsourc": 82, "translat": 82, "index": 84, "page": 84}, "objects": {"": [[0, 0, 0, "-", "tlc"]], "tlc": [[1, 0, 0, "-", "common"], [62, 0, 0, "-", "modeling"], [70, 0, 0, "-", "rigging"], [71, 0, 0, "-", "shading"]], "tlc.common": [[2, 0, 0, "-", "about"], [4, 0, 0, "-", "conditionchecker"], [8, 0, 0, "-", "miscutils"], [28, 0, 0, "-", "naming"], [51, 0, 0, "-", "pipeline"], [59, 0, 0, "-", "qtutils"]], "tlc.common.about": [[3, 1, 1, "", "about"]], "tlc.common.conditionchecker": [[5, 2, 1, "", "ConditionChecker"], [6, 2, 1, "", "ConditionErrorCriteria"], [7, 2, 1, "", "ConditionErrorLevel"]], "tlc.common.conditionchecker.ConditionChecker": [[5, 3, 1, "", "__init__"], [5, 4, 1, "", "count"], [5, 4, 1, "", "displayName"], [5, 4, 1, "", "elms"], [5, 4, 1, "", "errorLevel"], [5, 4, 1, "", "name"], [5, 3, 1, "", "reset"], [5, 3, 1, "", "select"], [5, 4, 1, "", "selectable"], [5, 3, 1, "", "setErrorLevel"], [5, 4, 1, "", "toolTip"]], "tlc.common.conditionchecker.ConditionErrorCriteria": [[6, 4, 1, "", "ERROR_WHEN_NOT_ONE"], [6, 4, 1, "", "ERROR_WHEN_NOT_ZERO"], [6, 4, 1, "", "WARN_WHEN_NOT_ONE"], [6, 4, 1, "", "WARN_WHEN_NOT_ZERO"], [6, 3, 1, "", "__init__"]], "tlc.common.conditionchecker.ConditionErrorLevel": [[7, 4, 1, "", "ERROR"], [7, 4, 1, "", "NONE"], [7, 4, 1, "", "OK"], [7, 4, 1, "", "WARN"], [7, 3, 1, "", "__init__"]], "tlc.common.miscutils": [[9, 2, 1, "", "BoundingBox"], [10, 1, 1, "", "countMayaProjectsInPath"], [11, 1, 1, "", "deleteChannelsAndHistory"], [12, 1, 1, "", "deleteChannelsAndHistoryForAll"], [13, 1, 1, "", "deleteEmptyGroups"], [14, 1, 1, "", "getBrokenReferences"], [15, 1, 1, "", "getCopyPastedNodes"], [16, 1, 1, "", "getCurrentProject"], [17, 1, 1, "", "getEmptyGroups"], [18, 1, 1, "", "getInstances"], [19, 1, 1, "", "getNodesWithInvalidCharacters"], [20, 1, 1, "", "getProjectPathForScene"], [21, 1, 1, "", "getReferences"], [22, 1, 1, "", "getScenesInDirectory"], [23, 1, 1, "", "importFile"], [24, 1, 1, "", "isNameUnique"], [25, 1, 1, "", "referenceFile"], [26, 1, 1, "", "renameNonUniqueNodes"], [27, 1, 1, "", "uninstance"]], "tlc.common.miscutils.BoundingBox": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "center"], [9, 3, 1, "", "createDebugWireframe"], [9, 3, 1, "", "depth"], [9, 3, 1, "", "diameter"], [9, 3, 1, "", "get"], [9, 3, 1, "", "height"], [9, 3, 1, "", "max"], [9, 3, 1, "", "maxDim"], [9, 3, 1, "", "min"], [9, 3, 1, "", "radius"], [9, 3, 1, "", "width"]], "tlc.common.naming": [[29, 5, 1, "", "DCCProjTopDirs"], [30, 5, 1, "", "DCCSceneExtension"], [31, 5, 1, "", "assetTypeAbbr"], [32, 5, 1, "", "assetTypeDir"], [33, 1, 1, "", "assetTypeFromAbbr"], [34, 5, 1, "", "directoriesToIgnore"], [35, 5, 1, "", "filesToIgnore"], [36, 5, 1, "", "imgPlanePos"], [37, 5, 1, "", "libraryAssetTypeAbbr"], [38, 5, 1, "", "libraryAssetTypeDir"], [39, 1, 1, "", "libraryAssetTypeFromAbbr"], [40, 5, 1, "", "libraryDir"], [41, 5, 1, "", "prepDptDir"], [42, 1, 1, "", "prepDptKeyFromDir"], [43, 5, 1, "", "prepDptTask"], [44, 1, 1, "", "prepDptTaskFromAbbr"], [45, 5, 1, "", "prepTaskRenamingSuggestions"], [46, 5, 1, "", "prodDptDir"], [47, 5, 1, "", "prodDptTask"], [48, 5, 1, "", "srcImgDirs"], [49, 5, 1, "", "topDirs"], [50, 5, 1, "", "workingDir"]], "tlc.common.pipeline": [[52, 2, 1, "", "Asset"], [53, 2, 1, "", "AssetFile"], [54, 2, 1, "", "DCCProject"], [55, 2, 1, "", "Shot"], [56, 1, 1, "", "createDirectoryTemplate"], [57, 1, 1, "", "getProjectForScene"], [58, 1, 1, "", "isThisPathAProject"]], "tlc.common.pipeline.Asset": [[52, 3, 1, "", "__init__"], [52, 4, 1, "", "assetID"], [52, 4, 1, "", "assetType"], [52, 3, 1, "", "getDirectoryName"], [52, 3, 1, "", "getFullPathDirectory"], [52, 3, 1, "", "getLastPublishedVersionPath"], [52, 3, 1, "", "getLastWorkingVersionPath"], [52, 3, 1, "", "getPublishedVersionsPaths"], [52, 3, 1, "", "getWorkingVersionsPaths"], [52, 4, 1, "", "inLibrary"], [52, 4, 1, "", "project"]], "tlc.common.pipeline.AssetFile": [[53, 3, 1, "", "__init__"], [53, 4, 1, "", "asset"], [53, 3, 1, "", "buildFullPath"], [53, 3, 1, "", "createForOpenScene"], [53, 3, 1, "", "createFromFields"], [53, 3, 1, "", "createFromPath"], [53, 4, 1, "", "dptID"], [53, 4, 1, "", "fullPath"], [53, 3, 1, "", "parsePath"], [53, 4, 1, "", "taskID"], [53, 3, 1, "", "verifyPath"], [53, 4, 1, "", "version"], [53, 4, 1, "", "workingVersion"]], "tlc.common.pipeline.DCCProject": [[54, 3, 1, "", "__init__"], [54, 3, 1, "", "getAssets"], [54, 3, 1, "", "getAssetsPath"], [54, 3, 1, "", "getSourceImagesPath"], [54, 4, 1, "", "path"], [54, 4, 1, "", "projID"]], "tlc.common.pipeline.Shot": [[55, 3, 1, "", "__init__"]], "tlc.common.qtutils": [[60, 2, 1, "", "CheckerWindow"], [61, 1, 1, "", "getMayaMainWindow"]], "tlc.common.qtutils.CheckerWindow": [[60, 3, 1, "", "__init__"], [60, 3, 1, "", "createLayout"], [60, 3, 1, "", "initUI"]], "tlc.modeling": [[63, 0, 0, "-", "meshcheck"], [67, 0, 0, "-", "meshcheck_ui"]], "tlc.modeling.meshcheck": [[64, 2, 1, "", "MeshChecker"], [65, 1, 1, "", "checkUVTile"], [66, 1, 1, "", "getTileID"]], "tlc.modeling.meshcheck.MeshChecker": [[64, 3, 1, "", "__init__"], [64, 3, 1, "", "analyze"], [64, 4, 1, "", "bbox"], [64, 4, 1, "", "geoConditions"], [64, 3, 1, "", "reset"], [64, 4, 1, "", "selection"], [64, 4, 1, "", "uvConditions"], [64, 3, 1, "", "writeDataCSV"], [64, 3, 1, "", "writeHeaderCSV"]], "tlc.modeling.meshcheck_ui": [[68, 2, 1, "", "MeshCheckerUI"], [69, 1, 1, "", "run"]], "tlc.modeling.meshcheck_ui.MeshCheckerUI": [[68, 3, 1, "", "__init__"], [68, 3, 1, "", "addConditionChecker"], [68, 3, 1, "", "check_button"], [68, 3, 1, "", "createConnections"], [68, 3, 1, "", "createLayout"], [68, 3, 1, "", "initUI"], [68, 3, 1, "", "populateUI"]], "tlc.shading": [[72, 0, 0, "-", "texturecheck_ui"], [75, 0, 0, "-", "textureutils"]], "tlc.shading.texturecheck_ui": [[73, 2, 1, "", "TextureCheckerUI"], [74, 1, 1, "", "run"]], "tlc.shading.texturecheck_ui.TextureCheckerUI": [[73, 3, 1, "", "__init__"], [73, 3, 1, "", "addFileTexture"], [73, 3, 1, "", "checkButton"], [73, 3, 1, "", "createConnections"], [73, 3, 1, "", "createLayout"], [73, 3, 1, "", "initUI"], [73, 3, 1, "", "populateUI"]], "tlc.shading.textureutils": [[76, 2, 1, "", "FileTexture"], [77, 2, 1, "", "ImageSource"], [78, 1, 1, "", "checkDuplicatedFileTextureNodes"], [79, 1, 1, "", "getAllFileTextureNodesInScene"], [80, 1, 1, "", "getUnusedTextureNodes"], [81, 1, 1, "", "getUsedTextureNodes"], [82, 5, 1, "", "inputConnectionsToMapType"], [83, 1, 1, "", "test"]], "tlc.shading.textureutils.FileTexture": [[76, 3, 1, "", "__init__"], [76, 4, 1, "", "assetFile"], [76, 4, 1, "", "channel"], [76, 3, 1, "", "checkDestination"], [76, 3, 1, "", "checkFileTexture"], [76, 3, 1, "", "checkShadingGroup"], [76, 4, 1, "", "colorSpace"], [76, 4, 1, "", "errorMessage"], [76, 4, 1, "", "errors"], [76, 4, 1, "", "fileName"], [76, 4, 1, "", "fullPath"], [76, 3, 1, "", "getConnectionsThroughAttrs"], [76, 3, 1, "", "getFirstConnectionThroughAttrs"], [76, 3, 1, "", "getMeshes"], [76, 4, 1, "", "imgSrc"], [76, 4, 1, "", "mapType"], [76, 4, 1, "", "missingFile"], [76, 4, 1, "", "nodeName"], [76, 4, 1, "", "pathInProject"], [76, 4, 1, "", "resX"], [76, 4, 1, "", "resY"], [76, 4, 1, "", "shadingGroup"], [76, 4, 1, "", "target"], [76, 4, 1, "", "valid"], [76, 3, 1, "", "verifyFileTextureNameOwn"]], "tlc.shading.textureutils.ImageSource": [[77, 3, 1, "", "__init__"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "data", "Python data"]}, "titleterms": {"tlc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "common": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "about": [2, 3], "conditioncheck": [4, 5, 6, 7], "conditionerrorcriteria": 6, "conditionerrorlevel": 7, "miscutil": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "boundingbox": 9, "countmayaprojectsinpath": 10, "deletechannelsandhistori": 11, "deletechannelsandhistoryforal": 12, "deleteemptygroup": 13, "getbrokenrefer": 14, "getcopypastednod": 15, "getcurrentproject": 16, "getemptygroup": 17, "getinst": 18, "getnodeswithinvalidcharact": 19, "getprojectpathforscen": 20, "getrefer": 21, "getscenesindirectori": 22, "importfil": 23, "isnameuniqu": 24, "referencefil": 25, "renamenonuniquenod": 26, "uninst": 27, "name": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], "dccprojtopdir": 29, "dccsceneextens": 30, "assettypeabbr": 31, "assettypedir": 32, "assettypefromabbr": 33, "directoriestoignor": 34, "filestoignor": 35, "imgplanepo": 36, "libraryassettypeabbr": 37, "libraryassettypedir": 38, "libraryassettypefromabbr": 39, "librarydir": 40, "prepdptdir": 41, "prepdptkeyfromdir": 42, "prepdpttask": 43, "prepdpttaskfromabbr": 44, "preptaskrenamingsuggest": 45, "proddptdir": 46, "proddpttask": 47, "srcimgdir": 48, "topdir": 49, "workingdir": 50, "pipelin": [51, 52, 53, 54, 55, 56, 57, 58], "asset": 52, "assetfil": 53, "dccproject": 54, "shot": 55, "createdirectorytempl": 56, "getprojectforscen": 57, "isthispathaproject": 58, "qtutil": [59, 60, 61], "checkerwindow": 60, "getmayamainwindow": 61, "model": [62, 63, 64, 65, 66, 67, 68, 69], "meshcheck": [63, 64, 65, 66], "checkuvtil": 65, "gettileid": 66, "meshcheck_ui": [67, 68, 69], "meshcheckerui": 68, "run": [69, 74], "rig": 70, "shade": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83], "texturecheck_ui": [72, 73, 74], "texturecheckerui": 73, "textureutil": [75, 76, 77, 78, 79, 80, 81, 82, 83], "filetextur": 76, "imagesourc": 77, "checkduplicatedfiletexturenod": 78, "getallfiletexturenodesinscen": 79, "getunusedtexturenod": 80, "getusedtexturenod": 81, "inputconnectionstomaptyp": 82, "test": 83, "welcom": 84, "": 84, "document": 84, "indic": 84, "tabl": 84}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"tlc": [[0, "module-tlc"]], "tlc.common": [[1, "module-tlc.common"]], "tlc.common.about": [[2, "module-tlc.common.about"]], "tlc.common.about.about": [[3, "tlc-common-about-about"]], "tlc.common.conditionchecker": [[4, "module-tlc.common.conditionchecker"]], "tlc.common.conditionchecker.ConditionChecker": [[5, "tlc-common-conditionchecker-conditionchecker"]], "tlc.common.conditionchecker.ConditionErrorCriteria": [[6, "tlc-common-conditionchecker-conditionerrorcriteria"]], "tlc.common.conditionchecker.ConditionErrorLevel": [[7, "tlc-common-conditionchecker-conditionerrorlevel"]], "tlc.common.miscutils": [[8, "module-tlc.common.miscutils"]], "tlc.common.miscutils.BoundingBox": [[9, "tlc-common-miscutils-boundingbox"]], "tlc.common.miscutils.countMayaProjectsInPath": [[10, "tlc-common-miscutils-countmayaprojectsinpath"]], "tlc.common.miscutils.deleteChannelsAndHistory": [[11, "tlc-common-miscutils-deletechannelsandhistory"]], "tlc.common.miscutils.deleteChannelsAndHistoryForAll": [[12, "tlc-common-miscutils-deletechannelsandhistoryforall"]], "tlc.common.miscutils.deleteEmptyGroups": [[13, "tlc-common-miscutils-deleteemptygroups"]], "tlc.common.miscutils.getBrokenReferences": [[14, "tlc-common-miscutils-getbrokenreferences"]], "tlc.common.miscutils.getCopyPastedNodes": [[15, "tlc-common-miscutils-getcopypastednodes"]], "tlc.common.miscutils.getCurrentProject": [[16, "tlc-common-miscutils-getcurrentproject"]], "tlc.common.miscutils.getEmptyGroups": [[17, "tlc-common-miscutils-getemptygroups"]], "tlc.common.miscutils.getInstances": [[18, "tlc-common-miscutils-getinstances"]], "tlc.common.miscutils.getNodesWithInvalidCharacters": [[19, "tlc-common-miscutils-getnodeswithinvalidcharacters"]], "tlc.common.miscutils.getProjectPathForScene": [[20, "tlc-common-miscutils-getprojectpathforscene"]], "tlc.common.miscutils.getReferences": [[21, "tlc-common-miscutils-getreferences"]], "tlc.common.miscutils.getScenesInDirectory": [[22, "tlc-common-miscutils-getscenesindirectory"]], "tlc.common.miscutils.importFile": [[23, "tlc-common-miscutils-importfile"]], "tlc.common.miscutils.isNameUnique": [[24, "tlc-common-miscutils-isnameunique"]], "tlc.common.miscutils.referenceFile": [[25, "tlc-common-miscutils-referencefile"]], "tlc.common.miscutils.renameNonUniqueNodes": [[26, "tlc-common-miscutils-renamenonuniquenodes"]], "tlc.common.miscutils.uninstance": [[27, "tlc-common-miscutils-uninstance"]], "tlc.common.naming": [[28, "module-tlc.common.naming"]], "tlc.common.naming.DCCProjTopDirs": [[29, "tlc-common-naming-dccprojtopdirs"]], "tlc.common.naming.DCCSceneExtension": [[30, "tlc-common-naming-dccsceneextension"]], "tlc.common.naming.assetTypeAbbr": [[31, "tlc-common-naming-assettypeabbr"]], "tlc.common.naming.assetTypeDir": [[32, "tlc-common-naming-assettypedir"]], "tlc.common.naming.assetTypeFromAbbr": [[33, "tlc-common-naming-assettypefromabbr"]], "tlc.common.naming.directoriesToIgnore": [[34, "tlc-common-naming-directoriestoignore"]], "tlc.common.naming.filesToIgnore": [[35, "tlc-common-naming-filestoignore"]], "tlc.common.naming.imgPlanePos": [[36, "tlc-common-naming-imgplanepos"]], "tlc.common.naming.libraryAssetTypeAbbr": [[37, "tlc-common-naming-libraryassettypeabbr"]], "tlc.common.naming.libraryAssetTypeDir": [[38, "tlc-common-naming-libraryassettypedir"]], "tlc.common.naming.libraryAssetTypeFromAbbr": [[39, "tlc-common-naming-libraryassettypefromabbr"]], "tlc.common.naming.libraryDir": [[40, "tlc-common-naming-librarydir"]], "tlc.common.naming.prepDptDir": [[41, "tlc-common-naming-prepdptdir"]], "tlc.common.naming.prepDptKeyFromDir": [[42, "tlc-common-naming-prepdptkeyfromdir"]], "tlc.common.naming.prepDptTask": [[43, "tlc-common-naming-prepdpttask"]], "tlc.common.naming.prepDptTaskFromAbbr": [[44, "tlc-common-naming-prepdpttaskfromabbr"]], "tlc.common.naming.prepTaskRenamingSuggestions": [[45, "tlc-common-naming-preptaskrenamingsuggestions"]], "tlc.common.naming.prodDptDir": [[46, "tlc-common-naming-proddptdir"]], "tlc.common.naming.prodDptTask": [[47, "tlc-common-naming-proddpttask"]], "tlc.common.naming.srcImgDirs": [[48, "tlc-common-naming-srcimgdirs"]], "tlc.common.naming.topDirs": [[49, "tlc-common-naming-topdirs"]], "tlc.common.naming.workingDir": [[50, "tlc-common-naming-workingdir"]], "tlc.common.pipeline": [[51, "module-tlc.common.pipeline"]], "tlc.common.pipeline.Asset": [[52, "tlc-common-pipeline-asset"]], "tlc.common.pipeline.AssetFile": [[53, "tlc-common-pipeline-assetfile"]], "tlc.common.pipeline.DCCProject": [[54, "tlc-common-pipeline-dccproject"]], "tlc.common.pipeline.Shot": [[55, "tlc-common-pipeline-shot"]], "tlc.common.pipeline.createDirectoryTemplate": [[56, "tlc-common-pipeline-createdirectorytemplate"]], "tlc.common.pipeline.getProjectForScene": [[57, "tlc-common-pipeline-getprojectforscene"]], "tlc.common.pipeline.isThisPathAProject": [[58, "tlc-common-pipeline-isthispathaproject"]], "tlc.common.qtutils": [[59, "module-tlc.common.qtutils"]], "tlc.common.qtutils.CheckerWindow": [[60, "tlc-common-qtutils-checkerwindow"]], "tlc.common.qtutils.getMayaMainWindow": [[61, "tlc-common-qtutils-getmayamainwindow"]], "tlc.modeling": [[62, "module-tlc.modeling"]], "tlc.modeling.meshcheck": [[63, "module-tlc.modeling.meshcheck"]], "tlc.modeling.meshcheck.MeshChecker": [[64, "tlc-modeling-meshcheck-meshchecker"]], "tlc.modeling.meshcheck.checkUVTile": [[65, "tlc-modeling-meshcheck-checkuvtile"]], "tlc.modeling.meshcheck.getTileID": [[66, "tlc-modeling-meshcheck-gettileid"]], "tlc.modeling.meshcheck_ui": [[67, "module-tlc.modeling.meshcheck_ui"]], "tlc.modeling.meshcheck_ui.MeshCheckerUI": [[68, "tlc-modeling-meshcheck-ui-meshcheckerui"]], "tlc.modeling.meshcheck_ui.run": [[69, "tlc-modeling-meshcheck-ui-run"]], "tlc.rigging": [[70, "module-tlc.rigging"]], "tlc.shading": [[71, "module-tlc.shading"]], "tlc.shading.texturecheck_ui": [[72, "module-tlc.shading.texturecheck_ui"]], "tlc.shading.texturecheck_ui.TextureCheckerUI": [[73, "tlc-shading-texturecheck-ui-texturecheckerui"]], "tlc.shading.texturecheck_ui.run": [[74, "tlc-shading-texturecheck-ui-run"]], "tlc.shading.textureutils": [[75, "module-tlc.shading.textureutils"]], "tlc.shading.textureutils.FileTexture": [[76, "tlc-shading-textureutils-filetexture"]], "tlc.shading.textureutils.ImageSource": [[77, "tlc-shading-textureutils-imagesource"]], "tlc.shading.textureutils.checkDuplicatedFileTextureNodes": [[78, "tlc-shading-textureutils-checkduplicatedfiletexturenodes"]], "tlc.shading.textureutils.getAllFileTextureNodesInScene": [[79, "tlc-shading-textureutils-getallfiletexturenodesinscene"]], "tlc.shading.textureutils.getUnusedTextureNodes": [[80, "tlc-shading-textureutils-getunusedtexturenodes"]], "tlc.shading.textureutils.getUsedTextureNodes": [[81, "tlc-shading-textureutils-getusedtexturenodes"]], "tlc.shading.textureutils.inputConnectionsToMapType": [[82, "tlc-shading-textureutils-inputconnectionstomaptype"]], "tlc.shading.textureutils.test": [[83, "tlc-shading-textureutils-test"]], "Welcome to TLC\u2019s documentation!": [[84, "welcome-to-tlc-s-documentation"]], "Indices and tables": [[84, "indices-and-tables"]]}, "indexentries": {"module": [[0, "module-tlc"], [1, "module-tlc.common"], [2, "module-tlc.common.about"], [4, "module-tlc.common.conditionchecker"], [8, "module-tlc.common.miscutils"], [28, "module-tlc.common.naming"], [51, "module-tlc.common.pipeline"], [59, "module-tlc.common.qtutils"], [62, "module-tlc.modeling"], [63, "module-tlc.modeling.meshcheck"], [67, "module-tlc.modeling.meshcheck_ui"], [70, "module-tlc.rigging"], [71, "module-tlc.shading"], [72, "module-tlc.shading.texturecheck_ui"], [75, "module-tlc.shading.textureutils"]], "tlc": [[0, "module-tlc"]], "tlc.common": [[1, "module-tlc.common"]], "tlc.common.about": [[2, "module-tlc.common.about"]], "about() (in module tlc.common.about)": [[3, "tlc.common.about.about"]], "tlc.common.conditionchecker": [[4, "module-tlc.common.conditionchecker"]], "conditionchecker (class in tlc.common.conditionchecker)": [[5, "tlc.common.conditionchecker.ConditionChecker"]], "__init__() (tlc.common.conditionchecker.conditionchecker method)": [[5, "tlc.common.conditionchecker.ConditionChecker.__init__"]], "count (tlc.common.conditionchecker.conditionchecker attribute)": [[5, "tlc.common.conditionchecker.ConditionChecker.count"]], "displayname (tlc.common.conditionchecker.conditionchecker attribute)": [[5, "tlc.common.conditionchecker.ConditionChecker.displayName"]], "elms (tlc.common.conditionchecker.conditionchecker attribute)": [[5, "tlc.common.conditionchecker.ConditionChecker.elms"]], "errorlevel (tlc.common.conditionchecker.conditionchecker attribute)": [[5, "tlc.common.conditionchecker.ConditionChecker.errorLevel"]], "name (tlc.common.conditionchecker.conditionchecker attribute)": [[5, "tlc.common.conditionchecker.ConditionChecker.name"]], "reset() (tlc.common.conditionchecker.conditionchecker method)": [[5, "tlc.common.conditionchecker.ConditionChecker.reset"]], "select() (tlc.common.conditionchecker.conditionchecker method)": [[5, "tlc.common.conditionchecker.ConditionChecker.select"]], "selectable (tlc.common.conditionchecker.conditionchecker attribute)": [[5, "tlc.common.conditionchecker.ConditionChecker.selectable"]], "seterrorlevel() (tlc.common.conditionchecker.conditionchecker method)": [[5, "tlc.common.conditionchecker.ConditionChecker.setErrorLevel"]], "tooltip (tlc.common.conditionchecker.conditionchecker attribute)": [[5, "tlc.common.conditionchecker.ConditionChecker.toolTip"]], "conditionerrorcriteria (class in tlc.common.conditionchecker)": [[6, "tlc.common.conditionchecker.ConditionErrorCriteria"]], "error_when_not_one (tlc.common.conditionchecker.conditionerrorcriteria attribute)": [[6, "tlc.common.conditionchecker.ConditionErrorCriteria.ERROR_WHEN_NOT_ONE"]], "error_when_not_zero (tlc.common.conditionchecker.conditionerrorcriteria attribute)": [[6, "tlc.common.conditionchecker.ConditionErrorCriteria.ERROR_WHEN_NOT_ZERO"]], "warn_when_not_one (tlc.common.conditionchecker.conditionerrorcriteria attribute)": [[6, "tlc.common.conditionchecker.ConditionErrorCriteria.WARN_WHEN_NOT_ONE"]], "warn_when_not_zero (tlc.common.conditionchecker.conditionerrorcriteria attribute)": [[6, "tlc.common.conditionchecker.ConditionErrorCriteria.WARN_WHEN_NOT_ZERO"]], "__init__() (tlc.common.conditionchecker.conditionerrorcriteria method)": [[6, "tlc.common.conditionchecker.ConditionErrorCriteria.__init__"]], "conditionerrorlevel (class in tlc.common.conditionchecker)": [[7, "tlc.common.conditionchecker.ConditionErrorLevel"]], "error (tlc.common.conditionchecker.conditionerrorlevel attribute)": [[7, "tlc.common.conditionchecker.ConditionErrorLevel.ERROR"]], "none (tlc.common.conditionchecker.conditionerrorlevel attribute)": [[7, "tlc.common.conditionchecker.ConditionErrorLevel.NONE"]], "ok (tlc.common.conditionchecker.conditionerrorlevel attribute)": [[7, "tlc.common.conditionchecker.ConditionErrorLevel.OK"]], "warn (tlc.common.conditionchecker.conditionerrorlevel attribute)": [[7, "tlc.common.conditionchecker.ConditionErrorLevel.WARN"]], "__init__() (tlc.common.conditionchecker.conditionerrorlevel method)": [[7, "tlc.common.conditionchecker.ConditionErrorLevel.__init__"]], "tlc.common.miscutils": [[8, "module-tlc.common.miscutils"]], "boundingbox (class in tlc.common.miscutils)": [[9, "tlc.common.miscutils.BoundingBox"]], "__init__() (tlc.common.miscutils.boundingbox method)": [[9, "tlc.common.miscutils.BoundingBox.__init__"]], "center() (tlc.common.miscutils.boundingbox method)": [[9, "tlc.common.miscutils.BoundingBox.center"]], "createdebugwireframe() (tlc.common.miscutils.boundingbox method)": [[9, "tlc.common.miscutils.BoundingBox.createDebugWireframe"]], "depth() (tlc.common.miscutils.boundingbox method)": [[9, "tlc.common.miscutils.BoundingBox.depth"]], "diameter() (tlc.common.miscutils.boundingbox method)": [[9, "tlc.common.miscutils.BoundingBox.diameter"]], "get() (tlc.common.miscutils.boundingbox method)": [[9, "tlc.common.miscutils.BoundingBox.get"]], "height() (tlc.common.miscutils.boundingbox method)": [[9, "tlc.common.miscutils.BoundingBox.height"]], "max() (tlc.common.miscutils.boundingbox method)": [[9, "tlc.common.miscutils.BoundingBox.max"]], "maxdim() (tlc.common.miscutils.boundingbox method)": [[9, "tlc.common.miscutils.BoundingBox.maxDim"]], "min() (tlc.common.miscutils.boundingbox method)": [[9, "tlc.common.miscutils.BoundingBox.min"]], "radius() (tlc.common.miscutils.boundingbox method)": [[9, "tlc.common.miscutils.BoundingBox.radius"]], "width() (tlc.common.miscutils.boundingbox method)": [[9, "tlc.common.miscutils.BoundingBox.width"]], "countmayaprojectsinpath() (in module tlc.common.miscutils)": [[10, "tlc.common.miscutils.countMayaProjectsInPath"]], "deletechannelsandhistory() (in module tlc.common.miscutils)": [[11, "tlc.common.miscutils.deleteChannelsAndHistory"]], "deletechannelsandhistoryforall() (in module tlc.common.miscutils)": [[12, "tlc.common.miscutils.deleteChannelsAndHistoryForAll"]], "deleteemptygroups() (in module tlc.common.miscutils)": [[13, "tlc.common.miscutils.deleteEmptyGroups"]], "getbrokenreferences() (in module tlc.common.miscutils)": [[14, "tlc.common.miscutils.getBrokenReferences"]], "getcopypastednodes() (in module tlc.common.miscutils)": [[15, "tlc.common.miscutils.getCopyPastedNodes"]], "getcurrentproject() (in module tlc.common.miscutils)": [[16, "tlc.common.miscutils.getCurrentProject"]], "getemptygroups() (in module tlc.common.miscutils)": [[17, "tlc.common.miscutils.getEmptyGroups"]], "getinstances() (in module tlc.common.miscutils)": [[18, "tlc.common.miscutils.getInstances"]], "getnodeswithinvalidcharacters() (in module tlc.common.miscutils)": [[19, "tlc.common.miscutils.getNodesWithInvalidCharacters"]], "getprojectpathforscene() (in module tlc.common.miscutils)": [[20, "tlc.common.miscutils.getProjectPathForScene"]], "getreferences() (in module tlc.common.miscutils)": [[21, "tlc.common.miscutils.getReferences"]], "getscenesindirectory() (in module tlc.common.miscutils)": [[22, "tlc.common.miscutils.getScenesInDirectory"]], "importfile() (in module tlc.common.miscutils)": [[23, "tlc.common.miscutils.importFile"]], "isnameunique() (in module tlc.common.miscutils)": [[24, "tlc.common.miscutils.isNameUnique"]], "referencefile() (in module tlc.common.miscutils)": [[25, "tlc.common.miscutils.referenceFile"]], "renamenonuniquenodes() (in module tlc.common.miscutils)": [[26, "tlc.common.miscutils.renameNonUniqueNodes"]], "uninstance() (in module tlc.common.miscutils)": [[27, "tlc.common.miscutils.uninstance"]], "tlc.common.naming": [[28, "module-tlc.common.naming"]], "dccprojtopdirs (in module tlc.common.naming)": [[29, "tlc.common.naming.DCCProjTopDirs"]], "dccsceneextension (in module tlc.common.naming)": [[30, "tlc.common.naming.DCCSceneExtension"]], "assettypeabbr (in module tlc.common.naming)": [[31, "tlc.common.naming.assetTypeAbbr"]], "assettypedir (in module tlc.common.naming)": [[32, "tlc.common.naming.assetTypeDir"]], "assettypefromabbr() (in module tlc.common.naming)": [[33, "tlc.common.naming.assetTypeFromAbbr"]], "directoriestoignore (in module tlc.common.naming)": [[34, "tlc.common.naming.directoriesToIgnore"]], "filestoignore (in module tlc.common.naming)": [[35, "tlc.common.naming.filesToIgnore"]], "imgplanepos (in module tlc.common.naming)": [[36, "tlc.common.naming.imgPlanePos"]], "libraryassettypeabbr (in module tlc.common.naming)": [[37, "tlc.common.naming.libraryAssetTypeAbbr"]], "libraryassettypedir (in module tlc.common.naming)": [[38, "tlc.common.naming.libraryAssetTypeDir"]], "libraryassettypefromabbr() (in module tlc.common.naming)": [[39, "tlc.common.naming.libraryAssetTypeFromAbbr"]], "librarydir (in module tlc.common.naming)": [[40, "tlc.common.naming.libraryDir"]], "prepdptdir (in module tlc.common.naming)": [[41, "tlc.common.naming.prepDptDir"]], "prepdptkeyfromdir() (in module tlc.common.naming)": [[42, "tlc.common.naming.prepDptKeyFromDir"]], "prepdpttask (in module tlc.common.naming)": [[43, "tlc.common.naming.prepDptTask"]], "prepdpttaskfromabbr() (in module tlc.common.naming)": [[44, "tlc.common.naming.prepDptTaskFromAbbr"]], "preptaskrenamingsuggestions (in module tlc.common.naming)": [[45, "tlc.common.naming.prepTaskRenamingSuggestions"]], "proddptdir (in module tlc.common.naming)": [[46, "tlc.common.naming.prodDptDir"]], "proddpttask (in module tlc.common.naming)": [[47, "tlc.common.naming.prodDptTask"]], "srcimgdirs (in module tlc.common.naming)": [[48, "tlc.common.naming.srcImgDirs"]], "topdirs (in module tlc.common.naming)": [[49, "tlc.common.naming.topDirs"]], "workingdir (in module tlc.common.naming)": [[50, "tlc.common.naming.workingDir"]], "tlc.common.pipeline": [[51, "module-tlc.common.pipeline"]], "asset (class in tlc.common.pipeline)": [[52, "tlc.common.pipeline.Asset"]], "__init__() (tlc.common.pipeline.asset method)": [[52, "tlc.common.pipeline.Asset.__init__"]], "assetid (tlc.common.pipeline.asset attribute)": [[52, "tlc.common.pipeline.Asset.assetID"]], "assettype (tlc.common.pipeline.asset attribute)": [[52, "tlc.common.pipeline.Asset.assetType"]], "getdirectoryname() (tlc.common.pipeline.asset method)": [[52, "tlc.common.pipeline.Asset.getDirectoryName"]], "getfullpathdirectory() (tlc.common.pipeline.asset method)": [[52, "tlc.common.pipeline.Asset.getFullPathDirectory"]], "getlastpublishedversionpath() (tlc.common.pipeline.asset method)": [[52, "tlc.common.pipeline.Asset.getLastPublishedVersionPath"]], "getlastworkingversionpath() (tlc.common.pipeline.asset method)": [[52, "tlc.common.pipeline.Asset.getLastWorkingVersionPath"]], "getpublishedversionspaths() (tlc.common.pipeline.asset method)": [[52, "tlc.common.pipeline.Asset.getPublishedVersionsPaths"]], "getworkingversionspaths() (tlc.common.pipeline.asset method)": [[52, "tlc.common.pipeline.Asset.getWorkingVersionsPaths"]], "inlibrary (tlc.common.pipeline.asset attribute)": [[52, "tlc.common.pipeline.Asset.inLibrary"]], "project (tlc.common.pipeline.asset attribute)": [[52, "tlc.common.pipeline.Asset.project"]], "assetfile (class in tlc.common.pipeline)": [[53, "tlc.common.pipeline.AssetFile"]], "__init__() (tlc.common.pipeline.assetfile method)": [[53, "tlc.common.pipeline.AssetFile.__init__"]], "asset (tlc.common.pipeline.assetfile attribute)": [[53, "tlc.common.pipeline.AssetFile.asset"]], "buildfullpath() (tlc.common.pipeline.assetfile method)": [[53, "tlc.common.pipeline.AssetFile.buildFullPath"]], "createforopenscene() (tlc.common.pipeline.assetfile method)": [[53, "tlc.common.pipeline.AssetFile.createForOpenScene"]], "createfromfields() (tlc.common.pipeline.assetfile method)": [[53, "tlc.common.pipeline.AssetFile.createFromFields"]], "createfrompath() (tlc.common.pipeline.assetfile method)": [[53, "tlc.common.pipeline.AssetFile.createFromPath"]], "dptid (tlc.common.pipeline.assetfile attribute)": [[53, "tlc.common.pipeline.AssetFile.dptID"]], "fullpath (tlc.common.pipeline.assetfile attribute)": [[53, "tlc.common.pipeline.AssetFile.fullPath"]], "parsepath() (tlc.common.pipeline.assetfile method)": [[53, "tlc.common.pipeline.AssetFile.parsePath"]], "taskid (tlc.common.pipeline.assetfile attribute)": [[53, "tlc.common.pipeline.AssetFile.taskID"]], "verifypath() (tlc.common.pipeline.assetfile method)": [[53, "tlc.common.pipeline.AssetFile.verifyPath"]], "version (tlc.common.pipeline.assetfile attribute)": [[53, "tlc.common.pipeline.AssetFile.version"]], "workingversion (tlc.common.pipeline.assetfile attribute)": [[53, "tlc.common.pipeline.AssetFile.workingVersion"]], "dccproject (class in tlc.common.pipeline)": [[54, "tlc.common.pipeline.DCCProject"]], "__init__() (tlc.common.pipeline.dccproject method)": [[54, "tlc.common.pipeline.DCCProject.__init__"]], "getassets() (tlc.common.pipeline.dccproject method)": [[54, "tlc.common.pipeline.DCCProject.getAssets"]], "getassetspath() (tlc.common.pipeline.dccproject method)": [[54, "tlc.common.pipeline.DCCProject.getAssetsPath"]], "getsourceimagespath() (tlc.common.pipeline.dccproject method)": [[54, "tlc.common.pipeline.DCCProject.getSourceImagesPath"]], "path (tlc.common.pipeline.dccproject attribute)": [[54, "tlc.common.pipeline.DCCProject.path"]], "projid (tlc.common.pipeline.dccproject attribute)": [[54, "tlc.common.pipeline.DCCProject.projID"]], "shot (class in tlc.common.pipeline)": [[55, "tlc.common.pipeline.Shot"]], "__init__() (tlc.common.pipeline.shot method)": [[55, "tlc.common.pipeline.Shot.__init__"]], "createdirectorytemplate() (in module tlc.common.pipeline)": [[56, "tlc.common.pipeline.createDirectoryTemplate"]], "getprojectforscene() (in module tlc.common.pipeline)": [[57, "tlc.common.pipeline.getProjectForScene"]], "isthispathaproject() (in module tlc.common.pipeline)": [[58, "tlc.common.pipeline.isThisPathAProject"]], "tlc.common.qtutils": [[59, "module-tlc.common.qtutils"]], "checkerwindow (class in tlc.common.qtutils)": [[60, "tlc.common.qtutils.CheckerWindow"]], "__init__() (tlc.common.qtutils.checkerwindow method)": [[60, "tlc.common.qtutils.CheckerWindow.__init__"]], "createlayout() (tlc.common.qtutils.checkerwindow method)": [[60, "tlc.common.qtutils.CheckerWindow.createLayout"]], "initui() (tlc.common.qtutils.checkerwindow method)": [[60, "tlc.common.qtutils.CheckerWindow.initUI"]], "getmayamainwindow() (in module tlc.common.qtutils)": [[61, "tlc.common.qtutils.getMayaMainWindow"]], "tlc.modeling": [[62, "module-tlc.modeling"]], "tlc.modeling.meshcheck": [[63, "module-tlc.modeling.meshcheck"]], "meshchecker (class in tlc.modeling.meshcheck)": [[64, "tlc.modeling.meshcheck.MeshChecker"]], "__init__() (tlc.modeling.meshcheck.meshchecker method)": [[64, "tlc.modeling.meshcheck.MeshChecker.__init__"]], "analyze() (tlc.modeling.meshcheck.meshchecker method)": [[64, "tlc.modeling.meshcheck.MeshChecker.analyze"]], "bbox (tlc.modeling.meshcheck.meshchecker attribute)": [[64, "tlc.modeling.meshcheck.MeshChecker.bbox"]], "geoconditions (tlc.modeling.meshcheck.meshchecker attribute)": [[64, "tlc.modeling.meshcheck.MeshChecker.geoConditions"]], "reset() (tlc.modeling.meshcheck.meshchecker method)": [[64, "tlc.modeling.meshcheck.MeshChecker.reset"]], "selection (tlc.modeling.meshcheck.meshchecker attribute)": [[64, "tlc.modeling.meshcheck.MeshChecker.selection"]], "uvconditions (tlc.modeling.meshcheck.meshchecker attribute)": [[64, "tlc.modeling.meshcheck.MeshChecker.uvConditions"]], "writedatacsv() (tlc.modeling.meshcheck.meshchecker method)": [[64, "tlc.modeling.meshcheck.MeshChecker.writeDataCSV"]], "writeheadercsv() (tlc.modeling.meshcheck.meshchecker method)": [[64, "tlc.modeling.meshcheck.MeshChecker.writeHeaderCSV"]], "checkuvtile() (in module tlc.modeling.meshcheck)": [[65, "tlc.modeling.meshcheck.checkUVTile"]], "gettileid() (in module tlc.modeling.meshcheck)": [[66, "tlc.modeling.meshcheck.getTileID"]], "tlc.modeling.meshcheck_ui": [[67, "module-tlc.modeling.meshcheck_ui"]], "meshcheckerui (class in tlc.modeling.meshcheck_ui)": [[68, "tlc.modeling.meshcheck_ui.MeshCheckerUI"]], "__init__() (tlc.modeling.meshcheck_ui.meshcheckerui method)": [[68, "tlc.modeling.meshcheck_ui.MeshCheckerUI.__init__"]], "addconditionchecker() (tlc.modeling.meshcheck_ui.meshcheckerui method)": [[68, "tlc.modeling.meshcheck_ui.MeshCheckerUI.addConditionChecker"]], "check_button() (tlc.modeling.meshcheck_ui.meshcheckerui method)": [[68, "tlc.modeling.meshcheck_ui.MeshCheckerUI.check_button"]], "createconnections() (tlc.modeling.meshcheck_ui.meshcheckerui method)": [[68, "tlc.modeling.meshcheck_ui.MeshCheckerUI.createConnections"]], "createlayout() (tlc.modeling.meshcheck_ui.meshcheckerui method)": [[68, "tlc.modeling.meshcheck_ui.MeshCheckerUI.createLayout"]], "initui() (tlc.modeling.meshcheck_ui.meshcheckerui method)": [[68, "tlc.modeling.meshcheck_ui.MeshCheckerUI.initUI"]], "populateui() (tlc.modeling.meshcheck_ui.meshcheckerui method)": [[68, "tlc.modeling.meshcheck_ui.MeshCheckerUI.populateUI"]], "run() (in module tlc.modeling.meshcheck_ui)": [[69, "tlc.modeling.meshcheck_ui.run"]], "tlc.rigging": [[70, "module-tlc.rigging"]], "tlc.shading": [[71, "module-tlc.shading"]], "tlc.shading.texturecheck_ui": [[72, "module-tlc.shading.texturecheck_ui"]], "texturecheckerui (class in tlc.shading.texturecheck_ui)": [[73, "tlc.shading.texturecheck_ui.TextureCheckerUI"]], "__init__() (tlc.shading.texturecheck_ui.texturecheckerui method)": [[73, "tlc.shading.texturecheck_ui.TextureCheckerUI.__init__"]], "addfiletexture() (tlc.shading.texturecheck_ui.texturecheckerui method)": [[73, "tlc.shading.texturecheck_ui.TextureCheckerUI.addFileTexture"]], "checkbutton() (tlc.shading.texturecheck_ui.texturecheckerui method)": [[73, "tlc.shading.texturecheck_ui.TextureCheckerUI.checkButton"]], "createconnections() (tlc.shading.texturecheck_ui.texturecheckerui method)": [[73, "tlc.shading.texturecheck_ui.TextureCheckerUI.createConnections"]], "createlayout() (tlc.shading.texturecheck_ui.texturecheckerui method)": [[73, "tlc.shading.texturecheck_ui.TextureCheckerUI.createLayout"]], "initui() (tlc.shading.texturecheck_ui.texturecheckerui method)": [[73, "tlc.shading.texturecheck_ui.TextureCheckerUI.initUI"]], "populateui() (tlc.shading.texturecheck_ui.texturecheckerui method)": [[73, "tlc.shading.texturecheck_ui.TextureCheckerUI.populateUI"]], "run() (in module tlc.shading.texturecheck_ui)": [[74, "tlc.shading.texturecheck_ui.run"]], "tlc.shading.textureutils": [[75, "module-tlc.shading.textureutils"]], "filetexture (class in tlc.shading.textureutils)": [[76, "tlc.shading.textureutils.FileTexture"]], "__init__() (tlc.shading.textureutils.filetexture method)": [[76, "tlc.shading.textureutils.FileTexture.__init__"]], "assetfile (tlc.shading.textureutils.filetexture attribute)": [[76, "tlc.shading.textureutils.FileTexture.assetFile"]], "channel (tlc.shading.textureutils.filetexture attribute)": [[76, "tlc.shading.textureutils.FileTexture.channel"]], "checkdestination() (tlc.shading.textureutils.filetexture method)": [[76, "tlc.shading.textureutils.FileTexture.checkDestination"]], "checkfiletexture() (tlc.shading.textureutils.filetexture method)": [[76, "tlc.shading.textureutils.FileTexture.checkFileTexture"]], "checkshadinggroup() (tlc.shading.textureutils.filetexture method)": [[76, "tlc.shading.textureutils.FileTexture.checkShadingGroup"]], "colorspace (tlc.shading.textureutils.filetexture attribute)": [[76, "tlc.shading.textureutils.FileTexture.colorSpace"]], "errormessage (tlc.shading.textureutils.filetexture attribute)": [[76, "tlc.shading.textureutils.FileTexture.errorMessage"]], "errors (tlc.shading.textureutils.filetexture attribute)": [[76, "tlc.shading.textureutils.FileTexture.errors"]], "filename (tlc.shading.textureutils.filetexture attribute)": [[76, "tlc.shading.textureutils.FileTexture.fileName"]], "fullpath (tlc.shading.textureutils.filetexture attribute)": [[76, "tlc.shading.textureutils.FileTexture.fullPath"]], "getconnectionsthroughattrs() (tlc.shading.textureutils.filetexture method)": [[76, "tlc.shading.textureutils.FileTexture.getConnectionsThroughAttrs"]], "getfirstconnectionthroughattrs() (tlc.shading.textureutils.filetexture method)": [[76, "tlc.shading.textureutils.FileTexture.getFirstConnectionThroughAttrs"]], "getmeshes() (tlc.shading.textureutils.filetexture method)": [[76, "tlc.shading.textureutils.FileTexture.getMeshes"]], "imgsrc (tlc.shading.textureutils.filetexture attribute)": [[76, "tlc.shading.textureutils.FileTexture.imgSrc"]], "maptype (tlc.shading.textureutils.filetexture attribute)": [[76, "tlc.shading.textureutils.FileTexture.mapType"]], "missingfile (tlc.shading.textureutils.filetexture attribute)": [[76, "tlc.shading.textureutils.FileTexture.missingFile"]], "nodename (tlc.shading.textureutils.filetexture attribute)": [[76, "tlc.shading.textureutils.FileTexture.nodeName"]], "pathinproject (tlc.shading.textureutils.filetexture attribute)": [[76, "tlc.shading.textureutils.FileTexture.pathInProject"]], "resx (tlc.shading.textureutils.filetexture attribute)": [[76, "tlc.shading.textureutils.FileTexture.resX"]], "resy (tlc.shading.textureutils.filetexture attribute)": [[76, "tlc.shading.textureutils.FileTexture.resY"]], "shadinggroup (tlc.shading.textureutils.filetexture attribute)": [[76, "tlc.shading.textureutils.FileTexture.shadingGroup"]], "target (tlc.shading.textureutils.filetexture attribute)": [[76, "tlc.shading.textureutils.FileTexture.target"]], "valid (tlc.shading.textureutils.filetexture attribute)": [[76, "tlc.shading.textureutils.FileTexture.valid"]], "verifyfiletexturenameown() (tlc.shading.textureutils.filetexture method)": [[76, "tlc.shading.textureutils.FileTexture.verifyFileTextureNameOwn"]], "imagesource (class in tlc.shading.textureutils)": [[77, "tlc.shading.textureutils.ImageSource"]], "__init__() (tlc.shading.textureutils.imagesource method)": [[77, "tlc.shading.textureutils.ImageSource.__init__"]], "checkduplicatedfiletexturenodes() (in module tlc.shading.textureutils)": [[78, "tlc.shading.textureutils.checkDuplicatedFileTextureNodes"]], "getallfiletexturenodesinscene() (in module tlc.shading.textureutils)": [[79, "tlc.shading.textureutils.getAllFileTextureNodesInScene"]], "getunusedtexturenodes() (in module tlc.shading.textureutils)": [[80, "tlc.shading.textureutils.getUnusedTextureNodes"]], "getusedtexturenodes() (in module tlc.shading.textureutils)": [[81, "tlc.shading.textureutils.getUsedTextureNodes"]], "inputconnectionstomaptype (in module tlc.shading.textureutils)": [[82, "tlc.shading.textureutils.inputConnectionsToMapType"]], "test() (in module tlc.shading.textureutils)": [[83, "tlc.shading.textureutils.test"]]}})